#!/usr/bin/env bash

# Copyright (C) 2018 Emanuele Petriglia <inbox@emanuelepetriglia.me>. All rights
# reserved. This file is licensed under the MIT license.

# Esegue tutti i test presenti nella cartella, ossia la coppia di file "*.in" e
# "*.out" (esempio: "esempio.in" e "esempio.out"). Alla fine mostra la velocità
# totale ed il numero di test passati.
# È necessario configurare correttamente MARS (ossia fornire l'eseguibile).
# ATTENZIONE: lo script non gestisce eventuali errori!

# Nome dell'eseguibile con cui avviare il simulatore.
MARS="mars"

# Nome del file assembly da testare.
PROGRAM="exercise01.asm"

TOTAL_SPEED="0"
TOTAL_TEST="0"
PASSED_TEST="0"

# Colori da stampare per i simboli.
RED="\033[0;31m"
GREEN="\033[0;32m"
RESET="\033[0m"

for hw_test in *.in; do
  TOTAL_TEST="$(expr $TOTAL_TEST + 1)"

  EXPECTED="${hw_test%.in}.out"
  OUT="$(mktemp)"

  java -jar $MARS.jar me nc sm ic $PROGRAM < $hw_test > $OUT

  # Prende la penultima riga, ossia la velocità.
  SPEED="$(cat $OUT | tail -n 2 | head -n 1)"
  TOTAL_SPEED="$(expr $TOTAL_SPEED + $SPEED)"

  # Scarta la velocità dal file di test.
  OUT_NO_SPEED="$(mktemp)"
  cat $OUT | head -n -2 > $OUT_NO_SPEED

  PASSED="$(diff $EXPECTED $OUT_NO_SPEED)"

  if [[ -z "$PASSED" ]]; then
    PASSED_TEST="$(expr $PASSED_TEST + 1)"
    echo -e "$hw_test ${GREEN}#${RESET}"
    echo "SPEED $SPEED"
    echo
  else
    echo -e "$hw_test ${RED}X${RESET}"
    echo -e "$PASSED"
    echo
  fi

  rm $OUT $OUT_NO_SPEED
done

echo "TOTAL SPEED: $TOTAL_SPEED"
echo "TEST PASSED: $PASSED_TEST / $TOTAL_TEST"
